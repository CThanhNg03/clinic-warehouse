version: '3.8'

services:
  # HDFS
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - "9870:9870"
    volumes:
      - namenode:/hadoop/dfs/name
    env_file:
      - ./hadoop.env
    networks:
      - hadoop

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    ports:
      - "9864:9864"
    volumes:
      - datanode1:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    networks:
      - hadoop

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    ports:
      - "9865:9864"
    volumes:
      - datanode2:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    networks:
      - hadoop

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    ports:
      - "8088:8088"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager1
    env_file:
      - ./hadoop.env
    networks:
      - hadoop

  nodemanager2:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager2
    env_file:
      - ./hadoop.env
    networks:
      - hadoop

  # Spark
  spark-master:
    image: bde2020/spark-master:3.0.0-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    env_file:
      - ./spark.env
    networks:
      - hadoop

  spark-worker1:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker1
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    env_file:
      - ./spark.env
    networks:
      - hadoop

  spark-worker2:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker2
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    env_file:
      - ./spark.env
    networks:
      - hadoop

  # Kafka & Zookeeper
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - hadoop

  kafka:
    image: wurstmeister/kafka:2.13-2.8.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - hadoop
    depends_on:
      - zookeeper

  # Hive
  hive-metastore:
    image: bde2020/hive-metastore:2.3.0-postgresql-metastore
    container_name: hive-metastore
    environment:
      - HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://warehouse:5432/hive
      - HIVE_CORE_CONF_javax_jdo_option_ConnectionDriverName=org.postgresql.Driver
      - HIVE_CORE_CONF_javax_jdo_option_ConnectionUserName=hive
      - HIVE_CORE_CONF_javax_jdo_option_ConnectionPassword=hive
    env_file:
      - ./hive.env
    depends_on:
      - warehouse
    networks:
      - hadoop

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    ports:
      - "10000:10000"
      - "10002:10002"
    env_file:
      - ./hive.env
    depends_on:
      - hive-metastore
    networks:
      - hadoop

  hive-client:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-client
    entrypoint: /bin/bash
    tty: true
    env_file:
      - ./hive.env
    depends_on:
      - hive-server
    networks:
      - hadoop

  # Iceberg (using Hive Metastore)
  iceberg:
    image: tabulario/iceberg-spark:1.3.0-hive
    container_name: iceberg
    environment:
      - HIVE_METASTORE_URI=thrift://hive-metastore:9083
    depends_on:
      - hive-metastore
    networks:
      - hadoop

  # Database for Hive Metastore and Warehouse
  warehouse:
    image: postgres:13
    container_name: warehouse
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: hive
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
    networks:
      - hadoop
    volumes:
      - warehouse:/var/lib/postgresql/data

  # Airflow
  airflow:
    image: apache/airflow:2.7.3
    container_name: airflow
    ports:
      - "8081:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://hive:hive@warehouse:5432/hive
      - AIRFLOW__CORE__FERNET_KEY=your_fernet_key
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    depends_on:
      - warehouse
    networks:
      - hadoop

  # Superset
  superset:
    image: apache/superset:2.1.0
    container_name: superset
    ports:
      - "8082:8088"
    environment:
      - SUPERSET_SECRET_KEY=your_superset_secret_key
      - SUPERSET_DATABASE_URI=postgresql+psycopg2://hive:hive@warehouse:5432/hive
    depends_on:
      - warehouse
    networks:
      - hadoop

networks:
  hadoop:
    driver: bridge

volumes:
  namenode:
  datanode1:
  datanode2:
  warehouse:
